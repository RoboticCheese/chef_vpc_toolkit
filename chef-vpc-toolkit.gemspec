# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{chef-vpc-toolkit}
  s.version = "2.9.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Dan Prince"]
  s.date = %q{2012-05-09}
  s.default_executable = %q{chef-vpc-toolkit}
  s.description = %q{The Chef VPC Toolkit is a set of Rake tasks that provide a framework to help automate the creation and configuration of cloud server groups for development or testing. Requires Cloud Servers VPC.}
  s.email = %q{dan.prince@rackspace.com}
  s.executables = ["chef-vpc-toolkit"]
  s.extra_rdoc_files = [
    "README.rdoc"
  ]
  s.files = [
    ".rvmrc",
    "CHANGELOG",
    "COPYING",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "bin/chef-vpc-toolkit",
    "chef-vpc-toolkit.gemspec",
    "config/chef_installer.yml",
    "config/databags.json.example",
    "config/nodes.json",
    "config/server_group.json",
    "contrib/doc/ChefVPCToolkit.odt",
    "contrib/doc/ChefVPCToolkit.pdf",
    "contrib/etc/chef_vpc_toolkit.conf",
    "contrib/rake/Rakefile",
    "cookbook-repos/local/README",
    "cookbook-repos/local/Rakefile",
    "cookbook-repos/local/certificates/README",
    "cookbook-repos/local/config/client.rb.example",
    "cookbook-repos/local/config/knife.rb.example",
    "cookbook-repos/local/config/rake.rb",
    "cookbook-repos/local/config/server.rb.example",
    "cookbook-repos/local/config/solo.rb.example",
    "cookbook-repos/local/cookbooks/README",
    "cookbook-repos/local/cookbooks/motd/README.rdoc",
    "cookbook-repos/local/cookbooks/motd/attributes/motd.rb",
    "cookbook-repos/local/cookbooks/motd/metadata.rb",
    "cookbook-repos/local/cookbooks/motd/recipes/default.rb",
    "cookbook-repos/local/cookbooks/motd/templates/default/motd.erb",
    "cookbook-repos/local/roles/README",
    "lib/chef-vpc-toolkit.rb",
    "lib/chef-vpc-toolkit/chef_bootstrap/centos.bash",
    "lib/chef-vpc-toolkit/chef_bootstrap/debian.bash",
    "lib/chef-vpc-toolkit/chef_bootstrap/fedora.bash",
    "lib/chef-vpc-toolkit/chef_bootstrap/rhel.bash",
    "lib/chef-vpc-toolkit/chef_bootstrap/ubuntu-opscode.bash",
    "lib/chef-vpc-toolkit/chef_bootstrap/ubuntu.bash",
    "lib/chef-vpc-toolkit/chef_bootstrap/unknown.bash",
    "lib/chef-vpc-toolkit/chef_functions.bash",
    "lib/chef-vpc-toolkit/chef_installer.rb",
    "lib/chef-vpc-toolkit/cloud-servers-vpc/client.rb",
    "lib/chef-vpc-toolkit/cloud-servers-vpc/connection.rb",
    "lib/chef-vpc-toolkit/cloud-servers-vpc/server.rb",
    "lib/chef-vpc-toolkit/cloud-servers-vpc/server_group.rb",
    "lib/chef-vpc-toolkit/cloud-servers-vpc/ssh_public_key.rb",
    "lib/chef-vpc-toolkit/cloud-servers-vpc/vpn_network_interface.rb",
    "lib/chef-vpc-toolkit/cloud_files.bash",
    "lib/chef-vpc-toolkit/ssh_util.rb",
    "lib/chef-vpc-toolkit/util.rb",
    "lib/chef-vpc-toolkit/version.rb",
    "lib/chef-vpc-toolkit/vpn_connection.rb",
    "lib/chef-vpc-toolkit/vpn_network_manager.rb",
    "lib/chef-vpc-toolkit/vpn_openvpn.rb",
    "lib/chef-vpc-toolkit/xml_util.rb",
    "rake/chef_vpc_toolkit.rake",
    "test/client_test.rb",
    "test/server_group_test.rb",
    "test/server_test.rb",
    "test/ssh_util_test.rb",
    "test/test_helper.rb",
    "test/util_test.rb",
    "test/vpn_network_manager_test.rb"
  ]
  s.homepage = %q{http://github.com/rackspace/chef-vpc-toolkit}
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{Rake tasks to automate and configure server groups in the cloud with Chef.}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<rake>, [">= 0"])
      s.add_runtime_dependency(%q<builder>, [">= 0"])
      s.add_runtime_dependency(%q<json>, [">= 0"])
      s.add_runtime_dependency(%q<uuidtools>, [">= 0"])
    else
      s.add_dependency(%q<rake>, [">= 0"])
      s.add_dependency(%q<builder>, [">= 0"])
      s.add_dependency(%q<json>, [">= 0"])
      s.add_dependency(%q<uuidtools>, [">= 0"])
    end
  else
    s.add_dependency(%q<rake>, [">= 0"])
    s.add_dependency(%q<builder>, [">= 0"])
    s.add_dependency(%q<json>, [">= 0"])
    s.add_dependency(%q<uuidtools>, [">= 0"])
  end
end

